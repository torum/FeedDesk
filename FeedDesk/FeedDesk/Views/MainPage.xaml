<Page
    x:Class="FeedDesk.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:XmlClients.Core.Models"
    xmlns:helper="using:XmlClients.Core.Helpers"
    xmlns:local="using:FeedDesk.Views"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:communityToolkitControls="using:CommunityToolkit.WinUI.Controls"
    NavigationCacheMode="Required"
    mc:Ignorable="d">
    <Page.Resources>
        <DataTemplate x:Key="FolderTemplate" x:DataType="model:NodeTree">
            <TreeViewItem ItemsSource="{x:Bind Children, Mode=TwoWay}" Padding="1" Margin="0,0,6,0" IsExpanded="{x:Bind IsExpanded, Mode=TwoWay}" IsSelected="{x:Bind IsSelected, Mode=TwoWay}">
                <StackPanel>
                    <Border x:Name="PanelBackground" Background="Transparent" CornerRadius="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <PathIcon Grid.Row="0" Grid.Column="0" Data="{x:Bind PathIcon, Mode=OneWay}"></PathIcon>

                            <TextBlock Grid.Row="0" Grid.Column="1" x:Name="NodeTextBlock" Text="{x:Bind Name, Mode=OneWay}" Padding="3" IsHitTestVisible="False" Margin="6,0,0,0"/>
                            <!--
                            <TextBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" x:Name="RenameTextBox" Text="{x:Bind Name, Mode=TwoWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="-5 0 3 0" Width="Auto" Visibility="Collapsed" LostFocus="RenameTextBox_LostFocus" KeyUp="RenameTextBox_KeyUp">

                            </TextBox>
                            -->

                            <TextBlock Grid.Column="2" Text="{x:Bind SubNodeText, Mode=OneWay}" Margin="9 3 3 3" HorizontalAlignment="Right" Visibility="Collapsed"></TextBlock>
                        </Grid>
                    </Border>
                </StackPanel>
            </TreeViewItem>
        </DataTemplate>

        <DataTemplate x:Key="FileTemplate" x:DataType="model:NodeTree">

            <TreeViewItem ItemsSource="{x:Bind Children, Mode=TwoWay}" Padding="1" Margin="0,0,6,0" IsExpanded="{x:Bind IsExpanded, Mode=TwoWay}" IsSelected="{x:Bind IsSelected, Mode=TwoWay}">
                <StackPanel>
                    <Border x:Name="PanelBackground" Background="Transparent" CornerRadius="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <PathIcon Grid.Row="0" Grid.Column="0" Data="{x:Bind PathIcon, Mode=OneWay}"></PathIcon>

                            <TextBlock Grid.Row="0" Grid.Column="1" x:Name="NodeTextBlock" Text="{x:Bind Name, Mode=OneWay}" Padding="3" IsHitTestVisible="False" Margin="6,0,0,0"/>
                            <!--
                            <TextBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" x:Name="RenameTextBox" Text="{x:Bind Name, Mode=TwoWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="-5 0 3 0" Width="Auto" Visibility="Collapsed" LostFocus="RenameTextBox_LostFocus" KeyUp="RenameTextBox_KeyUp">

                            </TextBox>
                            -->

                            <TextBlock Grid.Column="2" Text="{x:Bind SubNodeText, Mode=OneWay}" Margin="9 3 3 3" HorizontalAlignment="Right" Visibility="Collapsed"></TextBlock>

                        </Grid>
                    </Border>
                </StackPanel>
            </TreeViewItem>

        </DataTemplate>

        <model:ExplorerItemTemplateSelector x:Key="ExplorerItemTemplateSelector" FolderTemplate="{StaticResource FolderTemplate}" FileTemplate="{StaticResource FileTemplate}" />

    </Page.Resources>
    <Grid x:Name="ContentArea">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1007" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters><!-- 
                        <Setter Target="col1.Width" Value="3*"/>
                        <Setter Target="col2.Width" Value="4*" />
                        -->
                        <Setter Target="row2.Height" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="col1.Width" Value="*" />
                        <Setter Target="col2.Width" Value="0" />
                        <Setter Target="DetailsPane.(Grid.Row)" Value="1"/>
                        <Setter Target="DetailsPane.(Grid.Column)" Value="0"/>
                        <Setter Target="row1.Height" Value="3.5*" />
                        <Setter Target="row2.Height" Value="6.5*" />
                        <Setter Target="col1.MaxWidth" Value="1000" />
                        <Setter Target="col2.MinWidth" Value="0" />
                        <Setter Target="DetailsPane.Margin" Value="0,0,0,0"/>
                        <Setter Target="ListViewPane.CornerRadius" Value="0,0,0,0"/>
                        <Setter Target="DetailsPane.CornerRadius" Value="0,0,0,0"/>
                        <Setter Target="ListViewPaneColumnGridSplitter.Visibility" Value="Collapsed"/>
                        <Setter Target="ListViewPaneColumnGridSplitter.IsEnabled" Value="False"/>
                        <Setter Target="ListViewPaneRowGridSplitter.Visibility" Value="Visible"/>
                        <Setter Target="ListViewPaneRowGridSplitter.IsEnabled" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="256" MinWidth="256" MaxWidth="380" x:Name="LeftPaneGridColumn"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
            <Border Visibility="{x:Bind ViewModel.IsMainErrorInfoBarVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                <InfoBar IsOpen="{x:Bind ViewModel.IsMainErrorInfoBarVisible, Mode=TwoWay}" Severity="Error" IsIconVisible="True" IsClosable="True" Margin="6" Title="{x:Bind ViewModel.ErrorMainTitle, Mode=OneWay}" Message="{x:Bind ViewModel.ErrorMainMessage, Mode=OneWay}" />
            </Border>
            <Border Visibility="{x:Bind ViewModel.IsMainWarningInfoBarVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                <InfoBar IsOpen="{x:Bind ViewModel.IsMainWarningInfoBarVisible, Mode=TwoWay}" Severity="Warning" IsIconVisible="True" IsClosable="True" Margin="6" Title="{x:Bind ViewModel.WarningMainTitle, Mode=OneWay}" Message="{x:Bind ViewModel.WarningMainMessage, Mode=OneWay}" />
            </Border>
        </Grid>
        
        <!-- Left pane -->
        <Border x:Name="LeftPane" Grid.Row="1" Grid.Column="0" MinWidth="256" MaxWidth="380" SizeChanged="LeftPane_SizeChanged" Margin="0,0,0,0" CornerRadius="0" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}" BorderThickness="{ThemeResource NavigationViewContentChildGridBorderThickness}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Feeds menu buttons -->
                <Border Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}">

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="4,0,0,0">

                            <AppBarButton x:Uid="AppBarButton_Add_Feed" ToolTipService.ToolTip="Ctrl+N" IsCompact="False" Opacity="0.8" Command="{x:Bind ViewModel.FeedAddCommand}" IsTabStop="False">
                                <AppBarButton.Icon>
                                    <PathIcon Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <PathIcon.Data>
                                            M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z
                                        </PathIcon.Data>
                                    </PathIcon>
                                </AppBarButton.Icon>
                            </AppBarButton>

                            <AppBarButton x:Uid="AppBarButton_Add_Folder" IsCompact="False" Opacity="0.8" Command="{x:Bind ViewModel.FolderAddCommand}" IsTabStop="False">
                                <AppBarButton.Icon>
                                    <PathIcon Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <PathIcon.Data>M13 19C13 19.34 13.04 19.67 13.09 20H4C2.9 20 2 19.11 2 18V6C2 4.89 2.89 4 4 4H10L12 6H20C21.1 6 22 6.89 22 8V13.81C21.39 13.46 20.72 13.22 20 13.09V8H4V18H13.09C13.04 18.33 13 18.66 13 19M20 18V15H18V18H15V20H18V23H20V20H23V18H20Z</PathIcon.Data>
                                    </PathIcon>
                                </AppBarButton.Icon>
                            </AppBarButton>

                            <AppBarButton x:Uid="AppBarButton_Refresh" ToolTipService.ToolTip="Ctrl+R" IsCompact="False" Command="{x:Bind ViewModel.FeedRefreshAllCommand}" Opacity="0.8" IsTabStop="False">
                                <AppBarButton.Icon>
                                    <PathIcon Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <PathIcon.Data>
                                            M17.65,6.35C16.2,4.9 14.21,4 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20C15.73,20 18.84,17.45 19.73,14H17.65C16.83,16.33 14.61,18 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6C13.66,6 15.14,6.69 16.22,7.78L13,11H20V4L17.65,6.35Z</PathIcon.Data>
                                    </PathIcon>
                                </AppBarButton.Icon>
                            </AppBarButton>

                        </StackPanel>
                    </Grid>

                </Border>

                <Border x:Name="TreeViewControl" Grid.Row="1"
                          VerticalAlignment="Stretch" 
                          Background="{ThemeResource NavigationViewContentBackground}"
                           BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}">
                    <!-- Feeds treeview
                            Background="{ThemeResource NavigationViewContentBackground}"  Background="{ThemeResource NavigationViewTopPaneBackground}"
                            Background="{ThemeResource SolidBackgroundFillColorTertiaryBrush}"  -->
                    <TreeView
                          SelectionMode="Single" 
                          AllowDrop="True" 
                          CanReorderItems="True" 
                          CanDragItems="True" 
                          DragItemsStarting="TreeView_DragItemsStarting" 
                          DragItemsCompleted="TreeView_DragItemsCompleted" 
                          IsRightTapEnabled="True"
                          IsDoubleTapEnabled="True" 
                          ItemInvoked="TreeView_ItemInvoked" 
                          ItemsSource="{x:Bind ViewModel.Services, Mode=OneWay}" 
                          ItemTemplateSelector="{StaticResource ExplorerItemTemplateSelector}" 
                          SelectedItem="{x:Bind ViewModel.SelectedTreeViewItem, Mode=TwoWay}" 
                          Background="Transparent"
                          Margin="0,2,0,0"
                          Padding="0,0,0,0">
                        <!-- SelectedNode="{x:Bind ViewModel.SelectedTreeViewNode, Mode=OneWay}"  -->
                        <TreeView.Resources>
                            <MenuFlyout x:Key="TreeItemContextMenu">

                                <MenuFlyoutItem Text="Refresh" x:Uid="ShellMenuBarItem_Feed_SlectedFeed_Refresh" Command="{x:Bind ViewModel.FeedRefreshCommand}" >
                                    <MenuFlyoutItem.Icon>
                                        <PathIcon Margin="0,0,0,0">
                                            <PathIcon.Data>
                                                M17.65,6.35C16.2,4.9 14.21,4 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20C15.73,20 18.84,17.45 19.73,14H17.65C16.83,16.33 14.61,18 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6C13.66,6 15.14,6.69 16.22,7.78L13,11H20V4L17.65,6.35Z</PathIcon.Data>
                                        </PathIcon>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSeparator/>

                                <MenuFlyoutItem x:Uid="ShellMenuBarItem_Feed_SlectedFeed_Edit" Icon="Edit" Command="{x:Bind ViewModel.NodeEditCommand}"/>

                                <MenuFlyoutSeparator/>

                                <MenuFlyoutItem x:Uid="ShellMenuBarItem_Feed_SlectedFeed_Remove" Icon="Remove" Command="{x:Bind ViewModel.NodeRemoveCommand}">
                                    <MenuFlyoutItem.KeyboardAccelerators>
                                        <KeyboardAccelerator Key="Delete" />
                                    </MenuFlyoutItem.KeyboardAccelerators>
                                </MenuFlyoutItem>

                            </MenuFlyout>
                        </TreeView.Resources>

                        <TreeView.ItemContainerStyle>
                            <Style TargetType="controls:TreeViewItem">
                                <Setter Property="ContextFlyout" Value="{StaticResource TreeItemContextMenu}"/>
                            </Style>
                        </TreeView.ItemContainerStyle>

                        <TreeView.ItemTemplate>
                            <DataTemplate x:DataType="model:NodeTree">
                                <local:MyTreeViewItem ItemsSource="{x:Bind Children, Mode=TwoWay}" IsExpanded="{x:Bind IsExpanded, Mode=TwoWay}" IsSelected="{x:Bind IsSelected, Mode=TwoWay}" RightTapped="TreeViewItem_RightTapped" DoubleTapped="TreeViewItem_DoubleTapped" Padding="0" Margin="0,0,0,0">
                                    <StackPanel>
                                        <Border x:Name="PanelBackground" Background="Transparent" CornerRadius="0">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <Viewbox Grid.Row="0" Grid.Column="0" Margin="-4,0,0,0" Width="18" Height="18">
                                                    <PathIcon  Data="{x:Bind PathIcon, Mode=OneWay}" Opacity="0.8" Foreground="{ThemeResource FeedIconBrush}"></PathIcon>
                                                </Viewbox>

                                                <TextBlock Grid.Row="0" Grid.Column="1" x:Name="NodeTextBlock" Text="{x:Bind Name, Mode=OneWay}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Padding="3" Style="{ThemeResource NodeFeedTitleTextBlockStyle}" IsHitTestVisible="False" Margin="6,0,0,0"/>
                                                <!-- 
                                            <TextBlock Grid.Row="0" Grid.Column="2" Text="{x:Bind SubNodeText, Mode=OneWay}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Padding="3" Style="{ThemeResource NodeTextBlockStyle}" IsHitTestVisible="False" Margin="3,0,3,0" Opacity="0.5"/>
                                            -->
                                                <InfoBadge Grid.Row="0" Grid.Column="3" Style="{ThemeResource AttentionValueInfoBadgeStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Value="{x:Bind EntryNewCount, Mode=OneWay}" Visibility="{x:Bind IsEntryCountMoreThanZero, Mode=OneWay, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Margin="0,0,12,0" Opacity="0.7"/>

                                            </Grid>
                                        </Border>
                                    </StackPanel>
                                </local:MyTreeViewItem>
                            </DataTemplate>
                        </TreeView.ItemTemplate>

                    </TreeView>

                </Border>

            </Grid>
        </Border>

        <!-- Column Grid Splitter  -->
        <communityToolkitControls:GridSplitter x:Name="LeftPaneColumnGridSplitter" Grid.Row="1" Grid.Column="1"
                               Width="16"
                               HorizontalAlignment="Left"
                               ResizeBehavior="BasedOnAlignment"
                               ResizeDirection="Auto">
            <communityToolkitControls:GridSplitter.RenderTransform>
                <TranslateTransform X="-7" />
            </communityToolkitControls:GridSplitter.RenderTransform>
        </communityToolkitControls:GridSplitter>

        <!-- Right pane -->
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Error -->
            <Border Visibility="{x:Bind ViewModel.IsShowFeedError,Mode=OneWay}" Background="{ThemeResource NavigationViewContentBackground}" Margin="0,0,0,0" CornerRadius="0" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}" BorderThickness="{ThemeResource NavigationViewContentChildGridBorderThickness}">
                <ScrollViewer>

                    <Grid Margin="12,12,12,12" HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="42"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch">

                            <Viewbox Width="18" Height="18" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.7">
                                <Canvas Width="18" Height="18">
                                    <Path Fill="Red" Data="M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z" />
                                </Canvas>
                            </Viewbox>

                            <TextBlock Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Margin="24,4,0,0" Style="{ThemeResource SubtitleTextBlockStyle}" Opacity="0.7"><Run Text="Error"/></TextBlock>

                        </StackPanel>

                        <StackPanel Grid.Row="1" Grid.Column="1" Margin="3,12,24,0" HorizontalAlignment="Stretch">
                            <TextBox Header="Type:" Text="{x:Bind ViewModel.ErrorObj.ErrType, Mode=OneWay}" Background="Transparent" Opacity="0.7" Margin="0,12,0,0" BorderThickness="0" IsReadOnly="True" TextWrapping="Wrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>

                            <TextBox Header="Description:" Text="{x:Bind ViewModel.ErrorObj.ErrDescription, Mode=OneWay}" Background="Transparent" Opacity="0.7" Margin="0,12,0,0" BorderThickness="0" IsReadOnly="True" TextWrapping="Wrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>

                            <TextBox Header="Error message:" Text="{x:Bind ViewModel.ErrorObj.ErrText, Mode=OneWay}" Background="Transparent" Opacity="0.7" Margin="0,12,0,0" BorderThickness="0" IsReadOnly="True" TextWrapping="Wrap" HorizontalAlignment="Stretch"></TextBox>

                            <TextBox Header="Location 1:"  Text="{x:Bind ViewModel.ErrorObj.ErrPlaceParent, Mode=OneWay}" Background="Transparent" Opacity="0.7" Margin="0,12,0,0" BorderThickness="0,0,0,0" IsReadOnly="True" TextWrapping="Wrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>

                            <TextBox Header="Location 2:" Text="{x:Bind ViewModel.ErrorObj.ErrPlace, Mode=OneWay}" Background="Transparent" Opacity="0.7" Margin="0,12,0,0" BorderThickness="0,0,0,0" IsReadOnly="True" TextWrapping="Wrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>

                            <TextBox Header="Date and Time:" Text="{x:Bind ViewModel.ErrorObj.ErrDatetime, Mode=OneWay}" Background="Transparent" Opacity="0.7" Margin="0,12,0,0" BorderThickness="0,0,0,0" IsReadOnly="True" TextWrapping="Wrap" AcceptsReturn="False" HorizontalAlignment="Stretch"></TextBox>

                        </StackPanel>

                    </Grid>

                </ScrollViewer>
            </Border>

            <!-- ListView and details pane -->
            <Grid Visibility="{x:Bind ViewModel.IsNotShowFeedError,Mode=OneWay}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" x:Name="row1" MinHeight="200"/>
                    <RowDefinition Height="Auto" x:Name="row2"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" x:Name="col1" MinWidth="256"/>
                    <ColumnDefinition Width="4*" x:Name="col2" MinWidth="256" />
                </Grid.ColumnDefinitions>

                <Border x:Name="ListViewPane" Grid.Row="0" Grid.Column="0" SizeChanged="ListViewPane_SizeChanged" Margin="0,0,0,0" CornerRadius="0" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}" BorderThickness="{ThemeResource NavigationViewContentChildGridBorderThickness}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <!-- Entries menu buttons -->
                        <Border Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="4,0,0,0" VerticalAlignment="Center">

                                    <AppBarButton x:Uid="AppBarButton_Archive" Command="{x:Bind ViewModel.EntryArchiveAllCommand}" ToolTipService.ToolTip="Ctrl+A" IsCompact="False" Opacity="0.8" IsTabStop="False">
                                        <AppBarButton.Icon>
                                            <PathIcon Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <PathIcon.Data>
                                                    M20 21H4V10H6V19H18V10H20V21M3 3H21V9H3V3M5 5V7H19V5M10.5 11V14H8L12 18L16 14H13.5V11
                                                </PathIcon.Data>
                                            </PathIcon>
                                        </AppBarButton.Icon>
<!--
                                        <AppBarButton.KeyboardAccelerators>
                                            <KeyboardAccelerator Modifiers="Control" Key="A"/>
                                        </AppBarButton.KeyboardAccelerators>
-->
                                    </AppBarButton>

                                    <AppBarButton Label="{x:Bind ViewModel.InboxAppButtonLabel, Mode=OneWay}" IsEnabled="{x:Bind ViewModel.IsToggleInboxAppButtonEnabled,Mode=OneWay}" IsCompact="False" VerticalAlignment="Center" Margin="0" Padding="0" Opacity="0.8" IsTabStop="False">
                                        <AppBarButton.Icon>
                                            <PathIcon Data="{x:Bind ViewModel.ToggleInboxAppButtonIcon, Mode=OneWay}"/>
                                        </AppBarButton.Icon>
                                        <AppBarButton.Flyout>
                                            <MenuFlyout>
                                                <ToggleMenuFlyoutItem x:Uid="ShellMenuBarItem_Entry_View_Inbox" Command="{x:Bind ViewModel.ToggleShowInboxEntriesCommand, Mode=OneWay}" IsChecked="{x:Bind ViewModel.IsShowInboxEntries, Mode=OneWay}">
                                                    <ToggleMenuFlyoutItem.Icon>
                                                        <PathIcon Data="M19,15H15A3,3 0 0,1 12,18A3,3 0 0,1 9,15H5V5H19M19,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3Z"/>
                                                    </ToggleMenuFlyoutItem.Icon>
                                                </ToggleMenuFlyoutItem>
                                                <ToggleMenuFlyoutItem x:Uid="ShellMenuBarItem_Entry_View_All" Command="{x:Bind ViewModel.ToggleShowAllEntriesCommand, Mode=OneWay}" IsChecked="{x:Bind ViewModel.IsShowAllEntries, Mode=OneWay}">
                                                    <ToggleMenuFlyoutItem.Icon>
                                                        <PathIcon Data="M14.5 11C14.78 11 15 11.22 15 11.5V13H9V11.5C9 11.22 9.22 11 9.5 11H14.5M20 13.55V10H18V13.06C18.69 13.14 19.36 13.31 20 13.55M21 9H3V3H21V9M19 5H5V7H19V5M8.85 19H6V10H4V21H9.78C9.54 20.61 9.32 20.19 9.14 19.75L8.85 19M17 18C16.44 18 16 18.44 16 19S16.44 20 17 20 18 19.56 18 19 17.56 18 17 18M23 19C22.06 21.34 19.73 23 17 23S11.94 21.34 11 19C11.94 16.66 14.27 15 17 15S22.06 16.66 23 19M19.5 19C19.5 17.62 18.38 16.5 17 16.5S14.5 17.62 14.5 19 15.62 21.5 17 21.5 19.5 20.38 19.5 19Z"/>
                                                    </ToggleMenuFlyoutItem.Icon>
                                                </ToggleMenuFlyoutItem>
                                                <!--
                                                    <MenuFlyoutItem Text="Inbox" Command="{x:Bind ViewModel.ShowAllEntriesCommand}" CommandParameter="False" Opacity="0.9"></MenuFlyoutItem>
                                                    <MenuFlyoutItem Text="All" Command="{x:Bind ViewModel.ShowAllEntriesCommand}" CommandParameter="True"  Opacity="0.9"></MenuFlyoutItem>
                                                    -->
                                            </MenuFlyout>
                                        </AppBarButton.Flyout>
                                    </AppBarButton>

                                </StackPanel>

                                <!--
                                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">

                                        <AppBarButton Label="Show" Command="{x:Bind ViewModel.EntryViewInternalCommand}" IsCompact="False" VerticalAlignment="Center" Margin="0" Padding="0" Opacity="0.9" Visibility="Collapsed">
                                            <AppBarButton.Icon>
                                                <PathIcon>
                                                    <PathIcon.Data>
                                                        M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z
                                                    </PathIcon.Data>
                                                </PathIcon>
                                            </AppBarButton.Icon>
                                        </AppBarButton>

                                        <AppBarButton Label="Open" Command="{x:Bind ViewModel.EntryViewExternalCommand}" IsCompact="False" VerticalAlignment="Center" Margin="0" Padding="0" Opacity="0.9">
                                            <AppBarButton.Icon>
                                                <PathIcon>
                                                    <PathIcon.Data>
                                                        M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z
                                                    </PathIcon.Data>
                                                </PathIcon>
                                            </AppBarButton.Icon>
                                        </AppBarButton>
                                    </StackPanel>
                                    -->

                            </Grid>
                        </Border>

                        <!-- Entries listView
                         Background="{ThemeResource SolidBackgroundFillColorTertiaryBrush}" -->
                        <ListView Grid.Row="1" x:Name="ListViewEntryItem" Background="{ThemeResource NavigationViewContentBackground}" ItemsSource="{x:Bind ViewModel.Entries, Mode=OneWay}" SelectedItem="{x:Bind ViewModel.SelectedListViewItem, Mode=TwoWay}" SelectionChanged="ListViewEntryItem_SelectionChanged" IsDoubleTapEnabled="True" IsRightTapEnabled="True" SelectionMode="Single" Margin="0,0,0,0" Padding="0,2,0,0">
                            <ListView.Resources>

                                <MenuFlyout x:Key="ListItemContextMenu">
                                    <MenuFlyoutItem x:Uid="ShellMenuBarItem_Entry_SlectedEntry_Open" Command="{x:Bind ViewModel.EntryViewExternalCommand}">
                                        <MenuFlyoutItem.Icon>
                                            <PathIcon Margin="0,0,0,0">
                                                <PathIcon.Data>
                                                    M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z
                                                </PathIcon.Data>
                                            </PathIcon>
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>

                                    <MenuFlyoutItem x:Uid="ShellMenuBarItem_Entry_SlectedEntry_CopyURL" Command="{x:Bind ViewModel.EntryCopyUrlCommand}">
                                        <MenuFlyoutItem.Icon>
                                            <PathIcon Margin="0,0,0,0">
                                                <PathIcon.Data>
                                                    M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z
                                                </PathIcon.Data>
                                            </PathIcon>
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                    
                                </MenuFlyout>
                            </ListView.Resources>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="controls:ListViewItem">
                                    <Setter Property="ContextFlyout" Value="{StaticResource ListItemContextMenu}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="model:FeedEntryItem">
                                    <Grid x:Name="itemThumbnail" DoubleTapped="ListViewEntryItem_DoubleTappedAsync" RightTapped="ListViewEntryItem_RightTapped">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="20"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Viewbox Grid.RowSpan="2" Width ="20" Height="20" VerticalAlignment="Top" Margin="0,8,0,0">
                                            <PathIcon Data="{x:Bind PathIcon, Mode=OneWay}" Foreground="{ThemeResource SystemAccentColorLight2}" Width ="24" Height="24" Margin="6" VerticalAlignment="Center" HorizontalAlignment="Center"></PathIcon>
                                        </Viewbox>

                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{x:Bind Name}" x:Phase="0" Style="{ThemeResource NodeEntryTitleTextBlockStyle}" Padding="2" Margin="12,6,0,0"/>

                                        <TextBlock Grid.Row="0" Grid.Column="2" Text="{x:Bind PublishedDateTimeFormatedAbout}" x:Phase="1" HorizontalAlignment="Right" Style="{ThemeResource NodeEntryTitleCaptionTextBlockStyle}" Padding="2" Margin="6,6,0,0"/>

                                        <Grid Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <StackPanel Orientation="Horizontal" Grid.Column="0" Margin="12,0,0,0">
                                                <TextBlock x:Uid="FeedEntryItem_By" Style="{ThemeResource NodeEntryCaptionTextBlockStyle}" Padding="2" Margin="0" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis">
                                                </TextBlock>
                                                <TextBlock Text="{x:Bind Author}" x:Phase="1" Style="{ThemeResource NodeEntryCaptionTextBlockStyle}" Padding="2" Margin="0" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis">
                                                </TextBlock>
                                                <TextBlock x:Uid="FeedEntryItem_From" Style="{ThemeResource NodeEntryCaptionTextBlockStyle}" Padding="2" Margin="0" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis">
                                                </TextBlock>
                                                <TextBlock Text="{x:Bind Publisher}" x:Phase="1" Style="{ThemeResource NodeEntryCaptionTextBlockStyle}" Padding="2" Margin="0" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis">
                                                </TextBlock>
                                            </StackPanel>
                                            <!--
                                            <TextBlock Grid.Column="0" Style="{ThemeResource NodeEntryCaptionTextBlockStyle}" Padding="2" Margin="12,0,0,6" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis">
                                                <Run x:Uid="FeedEntryItem_By"/>
                                                <Run Text="{x:Bind Author}" x:Phase="1"/>
                                                <Run x:Uid="FeedEntryItem_From"/>
                                                <Run Text="{x:Bind Publisher}" x:Phase="1"/>
                                            </TextBlock>
                                            -->
                                            <TextBlock Grid.Column="1" Text="{x:Bind Host}" x:Phase="1" Style="{ThemeResource NodeEntryCaptionTextBlockStyle}" Padding="2" Margin="12,0,0,6" MaxWidth="124" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis">
                                            </TextBlock>
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                    </Grid>
                </Border>

                <!-- Column Grid Splitter  -->
                <communityToolkitControls:GridSplitter x:Name="ListViewPaneColumnGridSplitter" Grid.Row="0" Grid.Column="1"
                               Width="16"
                               HorizontalAlignment="Left"
                               ResizeBehavior="BasedOnAlignment"
                               ResizeDirection="Auto">
                    <communityToolkitControls:GridSplitter.RenderTransform>
                        <TranslateTransform X="-7" />
                    </communityToolkitControls:GridSplitter.RenderTransform>
                </communityToolkitControls:GridSplitter>

                <!-- Row Grid Splitter  -->
                <communityToolkitControls:GridSplitter x:Name="ListViewPaneRowGridSplitter" Grid.Row="1" Visibility="Collapsed" IsEnabled="False"
                               Height="16"
                               VerticalAlignment="Top">
                    <communityToolkitControls:GridSplitter.RenderTransform>
                        <TranslateTransform Y="-7" />
                    </communityToolkitControls:GridSplitter.RenderTransform>
                </communityToolkitControls:GridSplitter>

                <!-- Details pane --> 
                   <!-- SolidBackgroundFillColorQuarternaryBrush SolidBackgroundFillColorTertiaryBrush -->
                <Border x:Name="DetailsPane" Grid.Row="0" Grid.Column="1" Background="{ThemeResource LayerFillColorAltBrush}" Margin="0" CornerRadius="{ThemeResource NavigationViewContentChildGridCornerRadius}" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}" BorderThickness="{ThemeResource NavigationViewContentChildGridBorderThickness}">
                    <ScrollViewer x:Name="DetailsPaneScrollViewer" Visibility="{x:Bind ViewModel.IsEntryDetailVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">

                        <StackPanel Margin="24,12,24,24" MaxWidth="1024" Visibility="{x:Bind ViewModel.IsEntryDetailVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">

                            <StackPanel>

                                <!-- Title -->
                                <TextBlock Visibility="{x:Bind ViewModel.IsNoAltLinkExists, Mode=OneWay}" Text="{x:Bind ViewModel.SelectedListViewItem.Name, Mode=OneWay}" Margin="{StaticResource XXSmallTopMargin}" Style="{ThemeResource DetailTitleStyle}" FontSize="{StaticResource LargeFontSize}" Opacity="0.9"/>
                                <TextBlock Visibility="{x:Bind ViewModel.IsAltLinkExists, Mode=OneWay}" Margin="{StaticResource XXSmallTopMargin}" Style="{ThemeResource DetailTitleStyle}" FontSize="{StaticResource LargeFontSize}" Opacity="0.9">
                                        <Hyperlink NavigateUri="{x:Bind ViewModel.SelectedListViewItem.AltHtmlUri, Mode=OneWay}"><Run Text="{x:Bind ViewModel.SelectedListViewItem.Name, Mode=OneWay}"></Run></Hyperlink>
                                </TextBlock>

                                <!-- ImageLink -->
                                <StackPanel Visibility="{x:Bind ViewModel.IsImageLinkExists, Mode=OneWay, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                                    <TextBlock Text="{x:Bind ViewModel.SelectedListViewItem.ImageUri.AbsoluteUri, Mode=OneWay}" Margin="{StaticResource SmallTopMargin}" Style="{ThemeResource BodyTextBlockStyle}" Visibility="Collapsed"/>
                                    <Border CornerRadius="6" HorizontalAlignment="Stretch" Margin="0,16,0,0" Height="270" MaxHeight="270">
                                        <Border.Background>
                                            <ImageBrush ImageSource="{x:Bind ViewModel.SelectedListViewItem.ImageUri.AbsoluteUri, Mode=OneWay}" Stretch="UniformToFill"/>
                                        </Border.Background>
                                        <!--
                                            <Image Source="{x:Bind ViewModel.SelectedListViewItem.ImageUri.AbsoluteUri, Mode=OneWay}" HorizontalAlignment="Stretch" Margin="0,12,0,0" MaxHeight="270" Opacity="0"/>
                                             -->
                                    </Border>
                                </StackPanel>
                                
                                <!-- CommentPage -->
                                <StackPanel HorizontalAlignment="Right" Visibility="{x:Bind ViewModel.IsCommentPageLinkExists, Mode=OneWay, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                                    <HyperlinkButton x:Uid="MainPage_DetailsPane_CommentsPage" NavigateUri="{x:Bind ViewModel.SelectedListViewItem.CommentUri.AbsoluteUri, Mode=OneWay}" Margin="{StaticResource SmallTopMargin}" />
                                </StackPanel>

                                <communityToolkitControls:WrapPanel Orientation="Horizontal" VerticalSpacing="4" HorizontalSpacing="0" Margin="0 0 0 4">

                                    <!-- Publisher -->
                                    <StackPanel Margin="0 0 24 0">
                                        <TextBlock x:Uid="MainPage_DetailsPane_Publisher" Margin="{StaticResource SmallTopMargin}" Style="{StaticResource DetailBodyStrongStyle}" />
                                        <TextBlock Text="{x:Bind ViewModel.SelectedListViewItem.Publisher, Mode=OneWay}" Opacity="0.6" Margin="{StaticResource XXSmallTopMargin}" TextWrapping="Wrap" Style="{StaticResource DetailBodyStyle}" />
                                    </StackPanel>
                                    
                                    <!-- Author -->
                                    <StackPanel Margin="0 0 24 0">
                                        <TextBlock x:Uid="MainPage_DetailsPane_Author" Margin="{StaticResource SmallTopMargin}" Style="{StaticResource DetailBodyStrongStyle}" />
                                        <TextBlock Text="{x:Bind ViewModel.SelectedListViewItem.Author, Mode=OneWay}" Opacity="0.6" Margin="{StaticResource XXSmallTopMargin}" TextWrapping="Wrap" Style="{StaticResource DetailBodyStyle}" />
                                    </StackPanel>

                                    <!-- Published -->
                                    <StackPanel Margin="0 0 24 0">
                                        <TextBlock x:Uid="MainPage_DetailsPane_Published" Margin="{StaticResource SmallTopMargin}" Style="{StaticResource DetailBodyStrongStyle}" />
                                        <TextBlock Text="{x:Bind ViewModel.SelectedListViewItem.PublishedDateTimeFormated, Mode=OneWay}" Opacity="0.6" Margin="{StaticResource XXSmallTopMargin}" TextWrapping="Wrap" Style="{StaticResource DetailBodyStyle}" />
                                    </StackPanel>

                                    <!-- Category -->
                                    <StackPanel Margin="0 0 24 0">
                                        <TextBlock x:Uid="MainPage_DetailsPane_Category" Margin="{StaticResource SmallTopMargin}" Style="{StaticResource DetailBodyStrongStyle}" />
                                        <TextBlock Text="{x:Bind ViewModel.SelectedListViewItem.Category, Mode=OneWay}" Opacity="0.6" Margin="{StaticResource XXSmallTopMargin}" TextWrapping="Wrap" Style="{StaticResource DetailBodyStyle}" />
                                    </StackPanel>

                                </communityToolkitControls:WrapPanel>
                                
                                <!-- AudioLink -->
                                <StackPanel HorizontalAlignment="Left" Margin="0,6,0,0" Visibility="{x:Bind ViewModel.IsAudioLinkExists, Mode=OneWay, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                                    <TextBlock Text="Audio" Margin="{StaticResource SmallTopMargin}" Style="{ThemeResource DetailBodyStrongStyle}" Opacity="0.9"/>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,10,0,0" >
                                        <Button x:Uid="MainPage_DetailsPane_PlayAudio" Command="{x:Bind ViewModel.DownloadAudioFileCommand, Mode=OneWay}" Margin="0,0,0,0" />
                                        <Button x:Uid="MainPage_DetailsPane_CopyURL" Command="{x:Bind ViewModel.CopyAudioFileUrlToClipboardCommand, Mode=OneWay}" Margin="12,0,22,0"/>
                                    </StackPanel>
                                </StackPanel>
                                <!--
                                            <StackPanel Visibility="{x:Bind ViewModel.IsAudioLinkExists, Mode=OneWay, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                                                <StackPanel HorizontalAlignment="Left" Margin="0,6,0,0">
                                                    <MediaPlayerElement Source="{x:Bind ViewModel.MediaSource, Mode=OneWay}" Visibility="{x:Bind ViewModel.IsMediaPlayerVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" HorizontalAlignment="Left" MaxWidth="740" AutoPlay="False" AreTransportControlsEnabled="True" />
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,12,0,0" Visibility="{x:Bind ViewModel.IsNotMediaPlayerVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                                                        <Button Content="Download Audio File" Command="{x:Bind ViewModel.DownloadAudioFileCommand, Mode=OneWay}" Margin="22,0,0,0" />
                                                        <Button Content="Copy URL to Clipboard" Command="{x:Bind ViewModel.CopyAudioFileUrlToClipboardCommand, Mode=OneWay}" Margin="12,0,22,0"/>
                                                    </StackPanel>
                                                </StackPanel>
                                            </StackPanel>
                                            -->

                                <!-- Summary -->
                                <StackPanel Visibility="{x:Bind ViewModel.IsSummaryExists, Mode=OneWay}">
                                    <TextBlock x:Uid="MainPage_DetailsPane_Summary" Margin="{StaticResource SmallTopMargin}" Style="{ThemeResource DetailBodyStrongStyle}"/>
                                    <RichTextBlock helper:HtmlProperties.Html="{x:Bind ViewModel.SelectedListViewItem.Summary, Mode=OneWay}" Padding="2,4,0,6" Margin="0" IsTextSelectionEnabled="True" Style="{ThemeResource DetailBodyRichTextBlockStyle}" HorizontalAlignment="Stretch" HorizontalTextAlignment="Left"/>
                                    <!-- 
                                        <TextBlock Style="{ThemeResource DetailBodyStyle}" TextWrapping="Wrap" Text="{x:Bind ViewModel.SelectedListViewItem.Summary, Mode=OneWay}"/>
                                         -->
                                </StackPanel>

                                <!-- ContentText -->
                                <StackPanel Visibility="{x:Bind ViewModel.IsContentText, Mode=OneWay}">
                                    <TextBlock x:Uid="MainPage_DetailsPane_Content" Margin="{StaticResource SmallTopMargin}" Style="{ThemeResource DetailBodyStrongStyle}"/>
                                    <TextBlock Text="{x:Bind ViewModel.SelectedListViewItem.Content, Mode=OneWay}" TextWrapping="Wrap" Style="{ThemeResource DetailBodyStyle}"/>
                                </StackPanel>

                                <!-- ContentHTML -->
                                <StackPanel Visibility="{x:Bind ViewModel.IsContentHTML, Mode=OneWay}">
                                    <TextBlock x:Uid="MainPage_DetailsPane_Content" Margin="{StaticResource SmallTopMargin}" Style="{ThemeResource DetailBodyStrongStyle}"/>
                                    <RichTextBlock helper:HtmlProperties.Html="{x:Bind ViewModel.SelectedListViewItem.Content, Mode=OneWay}" Padding="2,4,0,6" Margin="0" IsTextSelectionEnabled="True" Style="{ThemeResource DetailBodyRichTextBlockStyle}" HorizontalAlignment="Stretch" HorizontalTextAlignment="Left"/>
                                </StackPanel>

                                <!--
                                    <StackPanel Visibility="{x:Bind ViewModel.IsContentHTML, Mode=OneWay}">
                                        <TextBlock Text="Content" Margin="{StaticResource SmallTopMargin}" Style="{ThemeResource SubtitleTextBlockStyle}" Opacity="0.9"/>
                                        <TextBlock Text="(The content type is HTML)" Margin="{StaticResource SmallTopMargin}"></TextBlock>
                                        <StackPanel Orientation="Horizontal">
                                                    
                                                    <AppBarButton Label="View" Command="{x:Bind ViewModel.EntryViewInternalCommand}" IsCompact="False" VerticalAlignment="Center" Margin="0" Padding="0" Opacity="1" >
                                                        <AppBarButton.Icon>
                                                            <PathIcon>
                                                                <PathIcon.Data>
                                                                    M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z
                                                                </PathIcon.Data>
                                                            </PathIcon>
                                                        </AppBarButton.Icon>
                                                    </AppBarButton>
                                            
                                            <AppBarButton Label="Open" Command="{x:Bind ViewModel.EntryViewExternalCommand}" IsCompact="False" VerticalAlignment="Center" Margin="0" Padding="0" Opacity="0.9">
                                                <AppBarButton.Icon>
                                                    <PathIcon>
                                                        <PathIcon.Data>
                                                            M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z
                                                        </PathIcon.Data>
                                                    </PathIcon>
                                                </AppBarButton.Icon>
                                            </AppBarButton>

                                        </StackPanel>
                                    </StackPanel>
                                    -->

                                <StackPanel Margin="0,0,0,24"></StackPanel>

                            </StackPanel>

                        </StackPanel>

                    </ScrollViewer>
                </Border>

            </Grid>

        </Grid>

        <!-- Media Player -->
        <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{x:Bind ViewModel.IsMediaPlayerVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
            <Border Grid.Row="0" BorderThickness="0,1,0,0" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}">
                <Grid>
                    <StackPanel HorizontalAlignment="Center" Margin="24,2,24,0">
                        <MediaPlayerElement Source="{x:Bind ViewModel.MediaSource, Mode=OneWay}" HorizontalAlignment="Center" MaxWidth="740" AutoPlay="False" AreTransportControlsEnabled="True" />
                    </StackPanel>
                    <Button Margin="6" Padding="6" VerticalAlignment="Top" HorizontalAlignment="Right" Background="Transparent" BorderThickness="0" Command="{x:Bind ViewModel.CloseMediaPlayerCommand}">
                        <Viewbox Width="14" Height="14" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.7">
                            <PathIcon Margin="-4,-4,0,0" Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"></PathIcon>
                        </Viewbox>
                    </Button>
                </Grid>
            </Border>
        </Grid>

        <!-- Debug pane -->
        <Grid Grid.Row="3" Margin="0" Grid.ColumnSpan="2" Visibility="{x:Bind ViewModel.IsDebugWindowEnabled, Mode=OneWay, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
            <Border Grid.Row="0" BorderThickness="0,1,0,0" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}">
                <TextBox x:Name="DebugTextBox" Text="{x:Bind ViewModel.DebugEventLog, Mode=OneWay}" TextWrapping="NoWrap" AcceptsReturn="True" IsSpellCheckEnabled="False" CornerRadius="0,0,0,0" HorizontalAlignment="Stretch" Padding="6 6 24 6" VerticalAlignment="Stretch" Margin="0" MinHeight="150" MaxHeight="150" Height="150" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
            </Border>
        </Grid>
    </Grid>
</Page>
